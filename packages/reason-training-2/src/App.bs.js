// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Text$ReactTemplate = require("./uikit/Text.bs.js");
var View$ReactTemplate = require("./uikit/View.bs.js");

var component = ReasonReact.statelessComponent("App");

function make(buyerName, buyerGender, order, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              var honorificTitle = buyerGender ? "Mrs." : "Mr.";
              var getOrderSizeAsString = function (orderSize) {
                switch (orderSize) {
                  case 0 : 
                      return "small";
                  case 1 : 
                      return "medium";
                  case 2 : 
                      return "large";
                  case 3 : 
                  case 4 : 
                  case 5 : 
                      return "very large";
                  
                }
              };
              var getOrderSentence = function (type_, size) {
                return type_ + (" with size " + (getOrderSizeAsString(size) + ", "));
              };
              var listOfOrders = order !== undefined ? order : /* [] */0;
              console.log(List.length(listOfOrders));
              var match = List.length(listOfOrders) > 0;
              return ReasonReact.element(undefined, undefined, View$ReactTemplate.make(/* array */[
                              ReasonReact.element(undefined, undefined, Text$ReactTemplate.make("Welcome to our online store " + (honorificTitle + (" " + (buyerName + "!!!"))), /* array */[])),
                              ReasonReact.element(undefined, undefined, Text$ReactTemplate.make("You order: ", /* array */[])),
                              match ? $$Array.of_list(List.map((function (item) {
                                            var item$1 = item;
                                            switch (item$1.tag | 0) {
                                              case 0 : 
                                                  return getOrderSentence("shirt", item$1[0]);
                                              case 1 : 
                                              case 2 : 
                                              case 3 : 
                                                  return getOrderSentence("jeans", item$1[0]);
                                              
                                            }
                                          }), listOfOrders)) : ReasonReact.element(undefined, undefined, Text$ReactTemplate.make("Nothing", /* array */[]))
                            ]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
